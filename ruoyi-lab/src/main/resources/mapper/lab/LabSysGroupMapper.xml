<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.lab.mapper.LabSysGroupMapper">
    <resultMap type="LabSysGroup" id="LabSysGroupResult">
        <result property="id" column="id"/>
        <result property="groups" column="groups"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectLabSysGroupVo">
        select id, groups, create_by, create_time, update_by, update_time, remark
        from lab_sys_group
    </sql>

    <select id="selectLabSysGroupList" parameterType="LabSysGroup" resultMap="LabSysGroupResult">
        <include refid="selectLabSysGroupVo"/>
        <where>
            <if test="groups != null  and groups != ''">and groups like concat('%', #{groups}, '%')</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''">
                and create_time between #{params.beginCreateTime} and #{params.endCreateTime}
            </if>
        </where>
        order by groups
    </select>

    <select id="checkLabSysGroupUnique" parameterType="LabSysGroup" resultMap="LabSysGroupResult">
        <include refid="selectLabSysGroupVo"/>
        <where>
            <if test="groups != null  and groups != ''">and groups=#{groups}</if>
        </where>
    </select>

    <select id="selectLabSysGroupById" parameterType="Long" resultMap="LabSysGroupResult">
        <include refid="selectLabSysGroupVo"/>
        where id = #{id}
    </select>

    <insert id="insertLabSysGroup" parameterType="LabSysGroup">
        insert into lab_sys_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="groups != null">groups,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="groups != null">#{groups},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateLabSysGroup" parameterType="LabSysGroup">
        update lab_sys_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="groups != null">groups = #{groups},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteLabSysGroupById" parameterType="Long">
        delete
        from lab_sys_group
        where id = #{id}
    </delete>

    <delete id="deleteLabSysGroupByIds" parameterType="String">
        delete from lab_sys_group where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="searchAllGroups" resultType="String">
        select distinct groups
        from lab_sys_group
    </select>

</mapper>
